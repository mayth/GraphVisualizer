<Window x:Class="GraphVisualizer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:gv="clr-namespace:GraphVisualizer"
        Title="GraphVisualizer"
        Height="600" Width="1000" MinHeight="600" MinWidth="1000"
        Name="Visualizer"
        WindowStartupLocation="CenterScreen"
        Loaded="mainWindow_Loaded">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static gv:MainWindow.MoveGraphCommand}"
                        Executed="MoveGraphCommandExecuted" />
        <CommandBinding Command="{x:Static gv:MainWindow.AddConstantCommand}"
                        CanExecute="AddConstantCommandCanExecute" Executed="AddConstantCommandExecuted" />
        <CommandBinding Command="{x:Static gv:MainWindow.RemoveConstantCommand}"
                        CanExecute="RemoveConstantCommandCanExecute" Executed="RemoveConstantCommandExecuted" />
        <CommandBinding Command="{x:Static gv:MainWindow.StepConstantCommand}"
                        CanExecute="StepConstantCommandCanExecuted" Executed="StepConstantCommandExecuted" />
    </Window.CommandBindings>
    <Window.Resources>
        <gv:DoubleValueValidationRule x:Key="DoubleValueValidationRule" />
        <gv:PositiveDoubleValueValidationRule x:Key="PositiveDoubleValueValidationRule" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="20*" />
        </Grid.ColumnDefinitions>
        <!-- Graph Viewer -->
        <DockPanel Grid.Column="0">
            <DockPanel DockPanel.Dock="Top">
                <Rectangle Fill="Navy" Height="2" Margin="0, 2" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom" />
                <DockPanel>
                    <Button DockPanel.Dock="Right" Name="saveToFileButton" Click="saveToFileButton_Click">現在のグラフを保存</Button>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <Button Name="funcChangeButton" FontSize="16" Click="funcChangeButton_Click">関数の変更</Button>
                        <Separator Width="20" Visibility="Hidden" />
                        <TextBlock FontSize="24" FontFamily="Times New Roman" VerticalAlignment="Center" Margin="5, 0, 10, 0">y =</TextBlock>
                        <TextBlock Name="displayFunctionText" FontSize="24" FontFamily="Times New Roman" VerticalAlignment="Center" />
                    </StackPanel>
                </DockPanel>
            </DockPanel>
            <DockPanel>
                <Button DockPanel.Dock="Left" Height="{Binding ElementName=graphBorder, Path=ActualHeight}" Padding="2"
                    Command="{x:Static gv:MainWindow.MoveGraphCommand}" CommandParameter="Left">←</Button>
                <Button DockPanel.Dock="Right" Height="{Binding ElementName=graphBorder, Path=ActualHeight}" Padding="2"
                    Command="{x:Static gv:MainWindow.MoveGraphCommand}" CommandParameter="Right">→</Button>
                <Button DockPanel.Dock="Top" Width="{Binding ElementName=graphBorder, Path=ActualWidth}" Padding="0"
                    Command="{x:Static gv:MainWindow.MoveGraphCommand}" CommandParameter="Up">↑</Button>
                <Button DockPanel.Dock="Bottom" Width="{Binding ElementName=graphBorder, Path=ActualWidth}" Padding="0"
                    Command="{x:Static gv:MainWindow.MoveGraphCommand}" CommandParameter="Down">↓</Button>
                <Border Name="graphBorder" BorderBrush="Gray" BorderThickness="2" Margin="5">
                    <Image Name="graphImage" Width="{Binding ElementName=graphBorder, Path=ActualWidth}" Height="{Binding ElementName=graphBorder, Path=ActualHeight}">
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <DrawingGroup x:Name="graphDG" />
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </Border>
            </DockPanel>
        </DockPanel>
        <!-- Configuration Panel -->
        <StackPanel Grid.Column="2">
            <StackPanel Margin="0, 2">
                <!-- Graph Drawing Configuration Panel -->
                <Border CornerRadius="15" Background="White" Margin="5">
                    <Border.BitmapEffect>
                        <DropShadowBitmapEffect Color="#71000000" ShadowDepth="5" />
                    </Border.BitmapEffect>
                    <StackPanel Name="graphDrawConfigPanel" Margin="5">
                        <DockPanel>
                            <Rectangle Fill="Navy" Height="2" Margin="0, 2" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom" />
                            <TextBlock FontSize="20">グラフ描画設定</TextBlock>
                        </DockPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <DockPanel Grid.Column="0">
                                <TextBlock DockPanel.Dock="Left" ToolTip="X軸の目盛り線の間隔">X軸間隔</TextBlock>
                                <TextBox Name="xAxisMarginBox" Margin="2, 0, 10, 0"
                                         Text="{Binding GridLineX, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="drawConfigurationBoxWithUpdate_TextChanged" />
                            </DockPanel>
                            <DockPanel Grid.Column="1">
                                <TextBlock DockPanel.Dock="Left" ToolTip="Y軸の目盛り線の間隔">Y軸間隔</TextBlock>
                                <TextBox Name="yAxisMarginBox" Margin="2, 0, 10, 0"
                                         Text="{Binding GridLineY, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="drawConfigurationBoxWithUpdate_TextChanged" />
                            </DockPanel>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <DockPanel Grid.Column="0">
                                <TextBlock DockPanel.Dock="Left" ToolTip="X軸目盛りの数字を表示する間隔">X軸目盛</TextBlock>
                                <TextBox Name="xScaleBox" Margin="2, 0, 10, 0"
                                         Text="{Binding ScaleX, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="drawConfigurationBox_TextChanged" />
                            </DockPanel>
                            <DockPanel Grid.Column="1">
                                <TextBlock DockPanel.Dock="Left" ToolTip="Y軸目盛りの数字を表示する間隔">Y軸目盛</TextBlock>
                                <TextBox Name="yScaleBox" Margin="2, 0, 10, 0"
                                         Text="{Binding ScaleY, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="drawConfigurationBox_TextChanged" />
                            </DockPanel>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <DockPanel Grid.Column="0">
                                <TextBlock DockPanel.Dock="Left" ToolTip="X軸方向の中心点からのずれ">Xオフセ</TextBlock>
                                <TextBox Name="xOffsetBox" Margin="2, 0, 10, 0"
                                         Text="{Binding OffsetX, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="drawConfigurationBox_TextChanged"/>
                            </DockPanel>
                            <DockPanel Grid.Column="1">
                                <TextBlock DockPanel.Dock="Left" ToolTip="Y軸方向の中心点からのずれ">Yオフセ</TextBlock>
                                <TextBox Name="yOffsetBox" Margin="2, 0, 10, 0"
                                         Text="{Binding OffsetY, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="drawConfigurationBox_TextChanged" />
                            </DockPanel>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <DockPanel Grid.Column="0">
                                <TextBlock DockPanel.Dock="Left" ToolTip="X軸の補助目盛り線の間隔">X軸補助</TextBlock>
                                <TextBox Name="xSubScaleMarginBox" Margin="2, 0, 10, 0"
                                         Text="{Binding SubGridLineX, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="drawConfigurationBox_TextChanged"/>
                            </DockPanel>
                            <DockPanel Grid.Column="1">
                                <TextBlock DockPanel.Dock="Left" ToolTip="Y軸の補助目盛り線の間隔">Y軸補助</TextBlock>
                                <TextBox Name="ySubScaleMarginBox" Margin="2, 0, 10, 0"
                                         Text="{Binding SubGridLineY, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="drawConfigurationBox_TextChanged"/>
                            </DockPanel>
                        </Grid>
                        <CheckBox IsChecked="{Binding EnableGridLine, UpdateSourceTrigger=PropertyChanged}" Click="CheckBox_Click">
                            目盛り線を表示する
                        </CheckBox>
                        <CheckBox IsChecked="{Binding EnableSubGridLine, UpdateSourceTrigger=PropertyChanged}" Click="CheckBox_Click">
                            補助目盛り線を表示する
                        </CheckBox>
                        <CheckBox IsChecked="{Binding IsDrawGraphLine, UpdateSourceTrigger=PropertyChanged}" Click="CheckBox_Click">
                            グラフの点と点の間の線を引く
                        </CheckBox>
                        <StackPanel Name="graphMoveStepPanel" Orientation="Horizontal">
                            <TextBlock>グラフ移動幅(px)</TextBlock>
                            <TextBox Width="50">
                                <Binding Path="GraphMoveStep">
                                    <Binding.ValidationRules>
                                        <gv:PositiveDoubleValueValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox>
                        </StackPanel>
                        <Button Name="graphColorSettingButton" Margin="50, 0" Click="graphColorSettingButton_Click">描画色設定</Button>
                    </StackPanel>
                </Border>
                <Separator Height="20" Visibility="Hidden" />
                <!-- Constants Setting Panel -->
                <Border CornerRadius="15" Background="White" Margin="5">
                    <Border.BitmapEffect>
                        <DropShadowBitmapEffect Color="#71000000" ShadowDepth="5" />
                    </Border.BitmapEffect>
                    <StackPanel Name="constantSettingPanel" Margin="5">
                        <DockPanel>
                            <Rectangle Fill="Navy" Height="2" Margin="0, 2" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom" />
                            <TextBlock FontSize="20">定数</TextBlock>
                        </DockPanel>
                        <DockPanel>
                            <StackPanel Name="constantValueControlPanel" DockPanel.Dock="Top">
                                <DockPanel Name="constantAddRemovePanel">
                                    <Button DockPanel.Dock="Right" Padding="5, 0"
                                            Command="{x:Static gv:MainWindow.RemoveConstantCommand}"
                                            CommandParameter="{Binding ElementName=parameterList}">選択中の定数を削除</Button>
                                    <StackPanel Orientation="Horizontal" Name="constantAddPanel">
                                        <TextBox Name="addingCharacterBox" Width="40" VerticalAlignment="Center" />
                                        <Button Padding="10, 0" Command="{x:Static gv:MainWindow.AddConstantCommand}"
                                                CommandParameter="{Binding ElementName=addingCharacterBox, Path=Text}">追加</Button>
                                    </StackPanel>
                                </DockPanel>
                                <StackPanel Name="constantStepPanel" DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                                    <Button Width="25" Command="{x:Static gv:MainWindow.StepConstantCommand}"
                                            CommandParameter="Down">-</Button>
                                    <TextBox Width="40" Margin="10, 0" TextAlignment="Center" ToolTip="左右のボタンを押した時の定数値の増減幅">
                                        <Binding Path="ValueStep">
                                            <Binding.ValidationRules>
                                                <gv:PositiveDoubleValueValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                    <Button Width="25" Command="{x:Static gv:MainWindow.StepConstantCommand}"
                                            CommandParameter="Up">+</Button>
                                </StackPanel>
                            </StackPanel>
                            <ListView Name="parameterList" SelectionMode="Single" Height="160">
                                <ListView.View>
                                    <GridView>
                                        <GridView.Columns>
                                            <GridViewColumn Header="リンク">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <CheckBox IsChecked="{Binding IsLinked}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="文字" DisplayMemberBinding="{Binding Character}" />
                                            <GridViewColumn Header="値">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <TextBox Name="valueBox" Width="100"
                                                                     TextChanged="valueBox_TextChanged">
                                                                <Binding Path="Value" UpdateSourceTrigger="PropertyChanged">
                                                                    <Binding.ValidationRules>
                                                                        <gv:DoubleValueValidationRule />
                                                                    </Binding.ValidationRules>
                                                                </Binding>
                                                            </TextBox>
                                                        </Grid>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView.Columns>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </DockPanel>
                    </StackPanel>
                </Border>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
